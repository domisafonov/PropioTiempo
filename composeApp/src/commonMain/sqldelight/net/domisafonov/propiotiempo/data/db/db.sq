CREATE TABLE activities (
  id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  name TEXT NOT NULL,
  older_version INTEGER,
  FOREIGN KEY(older_version) REFERENCES activities(id) ON DELETE SET NULL ON UPDATE RESTRICT
);
CREATE UNIQUE INDEX activities_older_versions ON activities (older_version);

CREATE TABLE time_activities (
  id INTEGER NOT NULL PRIMARY KEY,
  FOREIGN KEY(id) REFERENCES activities(id) ON DELETE CASCADE ON UPDATE RESTRICT
);

CREATE TABLE daily_checklist (
  id INTEGER NOT NULL PRIMARY KEY,
  FOREIGN KEY(id) REFERENCES activities(id) ON DELETE CASCADE ON UPDATE RESTRICT
);

CREATE TABLE daily_checklist_item (
  id TEXT NOT NULL PRIMARY KEY, -- UUID
  checklist_id INTEGER NOT NULL,
  ordinal INTEGER NOT NULL,
  name TEXT,
  FOREIGN KEY(checklist_id) REFERENCES daily_checklist(id) ON DELETE CASCADE ON UPDATE RESTRICT
) WITHOUT ROWID;
CREATE UNIQUE INDEX daily_checklist_item_order ON daily_checklist_item (checklist_id, ordinal);

CREATE TABLE time_activity_intervals (
  activity_id INTEGER NOT NULL,
  start_time INTEGER NOT NULL,
  end_time INTEGER,
  PRIMARY KEY(activity_id, start_time),
  FOREIGN KEY(activity_id) REFERENCES time_activities(id) ON DELETE CASCADE ON UPDATE RESTRICT
) WITHOUT ROWID;

CREATE TABLE daily_checklist_checks (
  daily_checklist_item_id TEXT NOT NULL,
  time INTEGER NOT NULL,
  PRIMARY KEY(daily_checklist_item_id, time),
  FOREIGN KEY(daily_checklist_item_id) REFERENCES daily_checklist(id) ON DELETE CASCADE ON UPDATE RESTRICT
) WITHOUT ROWID;

-- TODO: write the test data right here

get_inserted_autoid:
SELECT last_insert_rowid();

insert_activity:
INSERT INTO activities(name, older_version) VALUES(?, ?);

insert_time_activity:
INSERT INTO time_activities(id) VALUES(?);

insert_daily_checklist:
INSERT INTO daily_checklist(id) VALUES(?);

insert_daily_checklist_item:
INSERT INTO daily_checklist_item VALUES(?, ?, ?, ?);
